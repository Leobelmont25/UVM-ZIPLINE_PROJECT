`include "uvm_macros.svh"
import uvm_pkg::*;

class apb_scoreboard extends uvm_component;
  `uvm_component_utils(apb_scoreboard)

  uvm_analysis_imp#(apb_seq_item, apb_scoreboard) ap_imp;

  virtual axis_if.monitor inb_vif;
  virtual axis_if.monitor out_vif;

  function new(string name, uvm_component parent);
    super.new(name,parent);
    ap_imp = new("ap_imp", this);
  endfunction

  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    void'(uvm_config_db#(virtual axis_if.monitor)::get(this, "", "inb_vif", inb_vif));
    void'(uvm_config_db#(virtual axis_if.monitor)::get(this, "", "out_vif", out_vif));
    if (inb_vif == null)  `uvm_warning("SCB", "inb_vif n??o setado; sem log de INBOUND")
    if (out_vif == null)  `uvm_warning("SCB", "out_vif n??o setado; sem log de OUTBOUND")
  endfunction

  function void write(apb_seq_item tr);
    `uvm_info("APB_MON", $sformatf("Observed: %s", tr.convert2string()), UVM_LOW)
  endfunction

  task run_phase(uvm_phase phase);
    phase.raise_objection(this);

    fork
      if (inb_vif != null) monitor_axis(inb_vif, "INB_MON");
      if (out_vif != null) monitor_axis(out_vif, "OUT_MON");
    join_none

    // mant??m a run_phase viva enquanto a sim estiver ativa
    if (inb_vif != null) begin
      forever @(posedge inb_vif.aclk);
    end
    else if (out_vif != null) begin
      forever @(posedge out_vif.aclk);
    end
    else begin
      forever #100ns;
    end

    // (normalmente n??o chega aqui; $finish no top encerra a sim)
    phase.drop_objection(this);
  endtask

  task automatic monitor_axis(virtual axis_if.monitor vif, string tag);
    int unsigned pkt_id, beats;
    longint unsigned bytes;
    bit first_seen;
    bit [63:0] first_word;

    @(posedge vif.aclk);
    while (!vif.aresetn) @(posedge vif.aclk);

    pkt_id = 0; beats = 0; bytes = 0; first_seen = 0; first_word = '0;

    forever begin
      @(posedge vif.aclk);
      if (vif.tvalid && vif.tready) begin
        if (!first_seen) begin
          first_seen = 1;
          first_word = vif.tdata[63:0];
          `uvm_info(tag, $sformatf("pkt start: data=%h", vif.tdata), UVM_LOW)
        end
        beats++;
        bytes += ($bits(vif.tdata))/8;
        if (vif.tlast) begin
          pkt_id++;
          `uvm_info(tag,
            $sformatf("pkt=%0d beats=%0d bytes=%0d first_data=0x%016h last_data=%h",
                      pkt_id, beats, bytes, first_word, vif.tdata),
            UVM_LOW)
          beats = 0; bytes = 0; first_seen = 0; first_word = '0;
        end
      end
    end
  endtask
endclass
