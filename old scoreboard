`include "uvm_macros.svh"
import uvm_pkg::*;

class apb_scoreboard extends uvm_component;
  `uvm_component_utils(apb_scoreboard)

  uvm_analysis_imp#(apb_seq_item, apb_scoreboard) ap_imp;

  // ? usa a interface completa; nada de modport/clocking block
  virtual axis_if#(.DATA_W(`AXI_S_DP_DWIDTH)).monitor inb_vif;
  virtual axis_if#(.DATA_W(`AXI_S_DP_DWIDTH)).monitor out_vif;
  function new(string name, uvm_component parent);
    super.new(name, parent);
    ap_imp = new("ap_imp", this);
  endfunction

  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
void'(uvm_config_db#(virtual axis_if#(.DATA_W(`AXI_S_DP_DWIDTH)).monitor)
          ::get(this, "", "inb_vif", inb_vif));
    void'(uvm_config_db#(virtual axis_if#(.DATA_W(`AXI_S_DP_DWIDTH)).monitor)
          ::get(this, "", "out_vif", out_vif));

    if (inb_vif == null)  `uvm_warning("SCB", "inb_vif nao setado; sem log de INBOUND")
    if (out_vif == null)  `uvm_warning("SCB", "out_vif nao setado; sem log de OUTBOUND")
  endfunction

  function void write(apb_seq_item tr);
    `uvm_info("APB_MON",
      $sformatf("Observed: op=%s addr=0x%0h wdata=0x%0h rdata=0x%0h resp_err=%0d",
        (tr.op==apb_seq_item::APB_WRITE)?"W":"R", tr.addr, tr.data, tr.rdata, tr.resp_err),
      UVM_LOW)
  endfunction

  task run_phase(uvm_phase phase);
    fork
      // INBOUND
      if (inb_vif != null) begin
        bit first_seen = 0;
        bit [63:0] first_word = '0;
        int unsigned beats = 0;
        longint unsigned bytes = 0;
        forever begin
          @(posedge inb_vif.aclk);
          if (!inb_vif.aresetn) begin
            first_seen = 0; beats = 0; bytes = 0; first_word = '0;
          end
          else if (inb_vif.tvalid && inb_vif.tready) begin
            if (!first_seen) begin
              first_seen = 1;
              first_word = inb_vif.tdata[63:0];
              `uvm_info("INB_MON",$sformatf("pkt start: data=%016h", first_word),UVM_LOW)
            end
            beats++; bytes += ($bits(inb_vif.tdata)/8);
            if (inb_vif.tlast) begin
              `uvm_info("INB_MON",
                $sformatf("pkt beats=%0d bytes=%0d first_data=0x%016h",
                          beats, bytes, first_word), UVM_LOW)
              first_seen = 0; beats = 0; bytes = 0; first_word = '0;
            end
          end
        end
      end

      // OUTBOUND
      if (out_vif != null) begin
        bit first_seen2 = 0;
        bit [63:0] first_word2 = '0;
        int unsigned beats2 = 0;
        longint unsigned bytes2 = 0;
        forever begin
          @(posedge out_vif.aclk);
          if (!out_vif.aresetn) begin
            first_seen2 = 0; beats2 = 0; bytes2 = 0; first_word2 = '0;
          end
          else if (out_vif.tvalid && out_vif.tready) begin
            if (!first_seen2) begin
              first_seen2 = 1;
              first_word2 = out_vif.tdata[63:0];
              `uvm_info("OUT_MON",$sformatf("pkt start: data=%016h", first_word2),UVM_LOW)
            end
            beats2++; bytes2 += ($bits(out_vif.tdata)/8);
            if (out_vif.tlast) begin
              `uvm_info("OUT_MON",
                $sformatf("pkt beats=%0d bytes=%0d first_data=0x%016h",
                          beats2, bytes2, first_word2), UVM_LOW)
              first_seen2 = 0; beats2 = 0; bytes2 = 0; first_word2 = '0;
            end
          end
        end
      end
    join_none
  endtask

endclass
