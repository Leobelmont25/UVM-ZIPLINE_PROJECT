`include "uvm_macros.svh"
import uvm_pkg::*;

class cfg_test extends uvm_test;
  `uvm_component_utils(cfg_test)

  zip_env   env;
  cfg_seq   seq;

  function new(string name = "cfg_test", uvm_component parent = null);
    super.new(name, parent);
  endfunction

  function void build_phase(uvm_phase phase);
    // ---- declara????es primeiro ----
    string tn;
    // ------------------------------

    super.build_phase(phase);

    if (env == null)
      env = zip_env::type_id::create("env", this);

    if (!uvm_config_db#(string)::get(this, "", "testname", tn))
      tn = "unknown";

    seq = cfg_seq::type_id::create("seq");
    seq.testname = tn;
  endfunction

  task run_phase(uvm_phase phase);
    phase.raise_objection(this);
    // ajuste o caminho do sequencer se o seu env for diferente
    seq.start(env.apb.m_sequencer);
    phase.drop_objection(this);
  endtask
endclass
